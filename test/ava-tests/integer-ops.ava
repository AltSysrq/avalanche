extern register-test ava_register_test ava pos pos
import cstdio *

extern pass-test pass_test c void [int pos]

fun fail () = pass-test 0

fun assert-equals expr expected actual {
  if ($expected != $actual) {
    puts ($expr ` failed:\nExpected: ` $expected
          `\nActual: ` $actual)
    fail ()
  }
}

macro asseq control (%assert-equals [>0 "==" ":" >1+] (>0) (>1+))

register-test integer-ops {
  ; Basic signed arithmetic
  asseq 42 41 + 1
  asseq 42 43 - 1
  asseq 42 - -42
  asseq 42 + 042
  asseq 42 42 + ()
  asseq 42 42 - ()
  asseq 42 2 * 21
  asseq 42 () * 42
  asseq 42 42 * ()
  asseq 42 -42 * -1
  asseq 42 84 / 2
  asseq 42 85 / 2
  asseq 1 -3 / -2
  asseq -1 -3 / 2
  asseq -1 3 / -2
  asseq 2 7 / 3
  asseq -2 7 / -3
  asseq -2 -7 / 3
  asseq 2 -7 / -3
  asseq 0 () / 1
  asseq 42 42 / ()
  asseq 1 7 % 3
  asseq 1 7 % -3
  asseq 2 -7 % 3
  asseq 2 -7 % -3
  asseq 42 42 % ()
  asseq x7FFFFFFFFFFFFFFF -1 % ()
  asseq 0 () % 42
  asseq 1 7 %% 3
  asseq 1 7 %% -3
  asseq -1 -7 %% 3
  asseq -1 -7 %% -3
  asseq 0 () %% 4
  asseq -42 -42 %% ()
  asseq 0 -7 %% -7
  asseq -7 -7 %% 0
  asseq 0 -x8000000000000000 %% -1

  ; Bitwise operations
  asseq x22 x66 &^ x33
  asseq 42 42 &^ ()
  asseq 42 () &^ 42
  asseq x77 x66 |^ x33
  asseq 42 42 |^ ()
  asseq 42 () |^ 42
  asseq x55 x66 ^^ x33
  asseq 42 42 ^^ ()
  asseq 42 () ^^ 42
  asseq -1 ~^ 0
  asseq 0 ~^ -1
  asseq 84 42 <<^ 1
  asseq 168 42 <<^ 2
  asseq 0 42 <<^ 99
  asseq 0 42 <<^ -1
  asseq 42 42 <<^ ()
  asseq 0 () <<^ 1
  asseq 21 42 >>^ 1
  asseq 10 42 >>^ 2
  asseq x7FFFFFFFFFFFFFFF -1 >>^ 1
  asseq 0 42 >>^ 99
  asseq 0 42 >>^ -1
  asseq 42 42 >>^ ()
  asseq 0 () >>^ 1
  asseq 21 42 >>-^ 1
  asseq 10 42 >>-^ 2
  asseq -21 -42 >>-^ 1
  asseq -11 -42 >>-^ 2
  asseq 0 42 >>-^ 99
  asseq -1 -42 >>-^ 99
  asseq 0 42 >>-^ -1
  asseq -1 -42 >>-^ 99
  asseq 42 42 >>-^ ()
  asseq -42 -42 >>-^ ()
  asseq 0 () >>-^ 1

  ; Signed comparisons
  asseq 1 () == ()                \ asseq 0 () != ()
  asseq 1 0 == ()                 \ asseq 0 0 != ()
  asseq 1 () == 0                 \ asseq 0 () != 0
  asseq 1 42 == 42                \ asseq 0 42 != 42
  asseq 0 42 == 41                \ asseq 1 42 != 41
  asseq 1 42 == 042               \ asseq 0 42 != 042
  asseq 1 -1 == xFFFFFFFFFFFFFFFF \ asseq 0 -1 != xFFFFFFFFFFFFFFFF
  asseq 0 () < ()                 \ asseq 0 () > ()
  asseq 0 () < 0                  \ asseq 0 () > 0
  asseq 0 () < x7FFFFFFFFFFFFFFF  \ asseq 0 x7FFFFFFFFFFFFFFF > ()
  asseq 0 0 < ()                  \ asseq 0 () > 0
  asseq 0 -x8000000000000000 < () \ asseq 0 () > -x8000000000000000
  asseq 1 41 < 42                 \ asseq 1 42 > 41
  asseq 1 -1 < 1                  \ asseq 1 1 > -1
  asseq 0 42 < 41                 \ asseq 0 41 > 42
  asseq 0 42 < 42                 \ asseq 0 42 > 42
  asseq 0 () <= ()                \ asseq 0 () >= ()
  asseq 0 () <= 0                 \ asseq 0 0 >= ()
  asseq 0 0 <= ()                 \ asseq 0 () >= 0
  asseq 1 0 <= 0                  \ asseq 1 0 >= 0
  asseq 1 41 <= 42                \ asseq 1 42 >= 41
  asseq 1 42 <= 42                \ asseq 1 42 >= 42
  asseq 0 43 <= 42                \ asseq 0 42 >= 43
  asseq 1 -x8000000000000000 <= () \ asseq 1 () >= -x8000000000000000
  asseq 1 () <= x7FFFFFFFFFFFFFFF \ asseq 1 x7FFFFFFFFFFFFFFF >= ()

  ; Logical NOT
  asseq 0 ! 1
  asseq 0 ! 42
  asseq 1 ! 0
  asseq 1 ! ()

  ; Basic unsigned arithmetic
  asseq 42 41 u+ 1
  asseq 0 -1 u+ 1
  asseq x8000000000000000 x7FFFFFFFFFFFFFFF u+ 1
  asseq 42 () u+ 42
  asseq 42 42 u+ ()
  asseq 42 43 u- 1
  asseq -1 0 u- 1
  asseq x7FFFFFFFFFFFFFFF -x8000000000000000 u- 1
  asseq 42 42 u- ()
  asseq -42 () u- 42
  asseq 42 21 u* 2
  asseq -2 -1 u* 2
  asseq 0 x8000000000000000 u* 2
  asseq 42 42 u* ()
  asseq 42 () u* 42
  asseq 21 42 u/ 2
  asseq x7FFFFFFFFFFFFFFF -1 u/ 2
  asseq 0 -x8000000000000000 u/ -1
  asseq 42 42 u/ ()
  asseq 0 () u/ 2
  asseq 1 7 u% 3
  asseq 0 -1 u% 3
  asseq -42 -42 u% 0
  asseq -42 -42 u% ()
  asseq 0 () u% 2

  ; Unsigned comparisons
  asseq 0 () u< ()                \ asseq 0 () u> ()
  asseq 0 () u< 0                 \ asseq 0 0 u> ()
  asseq 0 0 u< ()                 \ asseq 0 () u> 0
  asseq 0 0 u< 0                  \ asseq 0 0 u> 0
  asseq 1 0 u< 1                  \ asseq 1 1 u> 0
  asseq 1 0 u< -1                 \ asseq 1 -1 u> 0
  asseq 0 -1 u< 0                 \ asseq 0 0 u> -1
  asseq 0 () u< -1                \ asseq 0 -1 u> ()
  asseq 0 () u<= ()               \ asseq 0 () u>= ()
  asseq 0 () u<= 0                \ asseq 0 0 u>= ()
  asseq 1 0 u<= ()                \ asseq 1 () u>= 0
  asseq 1 0 u<= 0                 \ asseq 1 0 u>= 0
  asseq 1 0 u<= 1                 \ asseq 1 1 u>= 0
  asseq 1 0 u<= -1                \ asseq 1 -1 u>= 0
  asseq 0 -1 u<= ()               \ asseq 0 () u>= -1
  asseq 1 () u<= -1               \ asseq 1 -1 u>= ()

  pass-test 42
}
